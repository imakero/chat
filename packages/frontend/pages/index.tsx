import { Box, Container, Heading, VStack } from "@chakra-ui/react";
import Head from "next/head";
import { useRouter } from "next/router";
import { useEffect, useRef, useState } from "react";
import ChatInput from "../components/chat-input";
import MessageBox from "../components/message-box";
import * as api from "../lib/api";
import { parseJwt } from "../lib/parse-jwt";
import { Message } from "../lib/types";
import { useEventSourceListener, useEventSource } from "../lib/event-source";

export default function Home() {
  const [messages, setMessages] = useState<Message[]>([]);
  const messageContainerRef = useRef<HTMLDivElement>(null);

  const router = useRouter();

  const [eventSource, eventSourceStatus] = useEventSource(
    "http://localhost:4000/sse",
    true
  );

  useEventSourceListener(
    eventSource as EventSource,
    ["message"],
    ({ data }) => {
      setMessages((oldMessages) => [...oldMessages, JSON.parse(data)]);
    },
    [setMessages]
  );

  useEffect(() => {
    const getMessages = async () => {
      try {
        const messages = await api.getMessages();
        if (messages) {
          setMessages(messages);
        }
      } catch (e) {
        router.push("/login");
      }
    };
    getMessages();
  }, [router]);

  useEffect(() => {
    if (messageContainerRef.current) {
      messageContainerRef.current.scrollTop =
        messageContainerRef.current.scrollHeight;
    }
  }, [messages]);

  return (
    <Container maxW="lg" h="100vh">
      <Head>
        <title>Chat</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <VStack alignItems="start" h="100vh">
        <Heading as="h1">Chat</Heading>
        <VStack
          flexGrow={1}
          w="100%"
          alignItems="start"
          overflow="scroll"
          ref={messageContainerRef}
        >
          {messages.map((message) => (
            <MessageBox key={message.id} message={message} />
          ))}
        </VStack>
        <Box w="100%" pb={4}>
          <ChatInput />
        </Box>
      </VStack>
    </Container>
  );
}
